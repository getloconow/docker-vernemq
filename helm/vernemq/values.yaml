# Default values for vernemq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 418915376963.dkr.ecr.ap-south-1.amazonaws.com/dev-vernemq
  tag: 1.21
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceMonitor:
  create: false

service:
  # NodePort - Listen to a port on nodes and forward to the service.
  # ClusterIP - Listen on the service internal to the cluster only.
  # LoadBalancer - Create a LoadBalancer in the cloud provider and forward to the service.
  type: LoadBalancer
#  clusterIP: 10.1.2.4
#  externalIPs: []
#  loadBalancerIP: 10.1.2.4
#  loadBalancerSourceRanges: []
#  sessionAffinity: None
#  sessionAffinityConfig: {}
  mqtt:
    enabled: true
    port: 1993
    # This is the port used by nodes to expose the service
    nodePort: 1993
  mqtts:
    enabled: false
    port: 8883
    # This is the port used by nodes to expose the service
    nodePort: 8883
  ws:
    enabled: true
    port: 9001
    # This is the port used by nodes to expose the service
    nodePort: 9001
  wss:
    enabled: true
    port: 9002
    nodePort: 9002
  annotations: {}
  labels: {}

## VerneMQ resources requests and limits
## Ref: http://kubernetes.io/docs/user-guide/compute-resources
resources:
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
 limits:
   cpu: 2
   memory: 4Gi
 requests:
   cpu: 2
   memory: 4Gi

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Node tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
tolerations: []

## Pod affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
podAntiAffinity: soft

securityContext:
  runAsUser: 10000
  runAsGroup: 10000
  fsGroup: 10000

## If RBAC is enabled on the cluster,VerneMQ needs a service account
## with permissisions sufficient to list pods
rbac:
  create: true
  serviceAccount:
    create: true
    ## Service account name to be used.
    ## If not set and serviceAccount.create is true a name is generated using the fullname template.
#    name:

persistentVolume:
  ## If true, VerneMQ will create/use a Persistent Volume Claim
  ## If false, use local directory
  enabled: false

  ## VerneMQ data Persistent Volume access modes
  ## Must match those of existing PV or dynamic provisioner
  ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  accessModes:
    - ReadWriteOnce

  ## VerneMQ data Persistent Volume size
  size: 2Gi

  ## VerneMQ data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
#  storageClass: ""

  ## Annotations for Persistent Volume Claim
  annotations: {}

# A list of secrets and their paths to mount inside the pod
# This is useful for mounting certificates for security (tls)
secretMounts: []
#  - name: vernemq-certificates
#    secretName: vernemq-certificates-secret
#    path: /etc/ssl/vernemq

statefulset:
  ## Start and stop pods in Parallel or OrderedReady (one-by-one.)  Note - Can not change after first release.
  ## Ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  podManagementPolicy: OrderedReady
  ## Statefulsets rolling update update strategy
  ## Ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#rolling-update
  updateStrategy: RollingUpdate
  ## Configure how much time VerneMQ takes to move offline queues to other nodes
  ## Ref: https://vernemq.com/docs/clustering/#detailed-cluster-leave-case-a-make-a-live-node-leave
  terminationGracePeriodSeconds: 60
  ## Liveness and Readiness probe values
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes
  livenessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  podAnnotations: {}
  prometheus.io/scrape: "true"
  prometheus.io/port: "8888"
  annotations: {}
  labels: {}

pdb:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1


## VerneMQ settings

additionalEnv:
  - name: DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT
    value: "on"
  - name: DOCKER_VERNEMQ_ALLOW_PUBLISH_DURING_NETSPLIT
    value: "on"
  - name: DOCKER_VERNEMQ_ALLOW_SUBSCRIBE_DURING_NETSPLIT
    value: "on"
  - name: DOCKER_VERNEMQ_ALLOW_UNSUBSCRIBE_DURING_NETSPLIT
    value: "on"
  - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
    value: "on"
  - name: DOCKER_VERNEMQ_MAX_CLIENT_ID_SIZE
    value: "1000"
  - name: DOCKER_VERNEMQ_MAX_ONLINE_MESSAGES
    value: "1000"
  - name: DOCKER_VERNEMQ_MAX_OFFLINE_MESSAGES
    value: "0"
  - name: DOCKER_VERNEMQ_LISTENER__TCP__BUFFER_SIZES
    value: "1024,2048,16384"
  - name: DOCKER_VERNEMQ_LISTENER__MAX_CONNECTIONS
    value: "infinity"
  - name: DOCKER_VERNEMQ_LISTENER__NR_OF_ACCEPTORS
    value: "100"
  - name: "DOCKER_VERNEMQ_SHARED_SUBSCRIPTION_POLICY"
    value: "random"
  - name: "DOCKER_VERNEMQ_PLUGINS__VMQ_ACL"
    value: "off"
  - name: "DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD"
    value: "off"
  - name: "DOCKER_VERNEMQ_PLUGINS__VMQ_DIVERSITY"
    value: "on"
  - name: "DOCKER_VERNEMQ_METADATA_PLUGIN"
    value: "vmq_plumtree"
  - name: "DOCKER_VERNEMQ_VMQ_DIVERSITY__SCRIPT_DIR"
    value: "/vernemq/share/lua/"
  - name: "DOCKER_VERNEMQ_VMQ_DIVERSITY__MYSCRIPT1__FILE"
    value: "/vernemq/share/lua/auth/custom.lua"
  - name: "DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL"
    value: "debug"
  - name: "DOCKER_VERNEMQ_ERLANG__MAX_PORTS"
    value: "10000000"
  - name: "DOCKER_VERNEMQ_ERLANG__PROCESS_LIMIT"
    value: "10000000"
  - name: "DOCKER_VERNEMQ_LEVELDB__MAXIMUM_MEMORY__PERCENT"
    value: "20"
  - name: "DOCKER_VERNEMQ_VMQ_DIVERSITY__REDIS__HOST"
    value: "cache.easyvideo.in"
  - name: "DOCKER_VERNEMQ_VMQ_DIVERSITY__REDIS__PORT"
    value: "6379"
  - name: "DOCKER_VERNEMQ_VMQ_DIVERSITY__REDIS__DATABASE"
    value: "0"

## vmq_diversity.redis.host = localhost                                    
                                                    
##                                                  
## Default: 6379                                    
##                                                  
## Acceptable values:                               
##   - an integer                      
## vmq_diversity.redis.port = 6379     
                                                               
##                                                                    
## Default:                                                       
##                                               
## Acceptable values:                  
##   - text                            
## vmq_diversity.redis.password =      
                                       
##                                     
## Default: 0                          
##                                     
## Acceptable values:                                                       
##   - an integer                  
## vmq_diversity.redis.database = 0

#  - name: DOCKER_VERNEMQ_LISTENER__SSL__CAFILE
#    value: "/etc/ssl/vernemq/tls.crt"
#  - name: DOCKER_VERNEMQ_LISTENER__SSL__CERTFILE
#    value: "/etc/ssl/vernemq/tls.crt"
#  - name: DOCKER_VERNEMQ_LISTENER__SSL__KEYFILE
#    value: "/etc/ssl/vernemq/tls.key"
